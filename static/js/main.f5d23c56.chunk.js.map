{"version":3,"sources":["useJsonFetch.js","components/Data.js","components/Error.js","components/Loading.js","App.js","index.js"],"names":["useJsonFetch","url","useState","data","setData","loading","setLoading","error","setError","useEffect","a","fetch","response","ok","statusText","Error","json","respData","status","console","log","fetchData","DataComponent","props","ErrorComponent","LoadingComponent","App","urlEnv","process","ReactDOM","render","document","getElementById"],"mappings":"6MAEe,SAASA,EAAaC,GAAM,IAAD,EAChBC,qBADgB,mBACjCC,EADiC,KAC3BC,EAD2B,OAEVF,oBAAS,GAFC,mBAEjCG,EAFiC,KAExBC,EAFwB,OAGdJ,mBAAS,MAHK,mBAGjCK,EAHiC,KAG1BC,EAH0B,KAyBxC,OApBAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,6DAChBJ,GAAW,GADK,kBAGSK,MAAMV,GAHf,WAGRW,EAHQ,QAIAC,GAJA,sBAKZL,EAASI,EAASE,YACZ,IAAIC,MAAMH,EAASE,YANb,wBAQSF,EAASI,OARlB,QAQRC,EARQ,OASdb,EAAQa,EAASC,QATH,kDAWdC,QAAQC,IAAR,MAXc,yBAadd,GAAW,GAbG,6EAAH,qDAgBfe,KACA,CAACpB,IAEI,CAACE,EAAME,EAASE,GCxBV,SAASe,EAAcC,GAAQ,IAAD,EAGZvB,EAFfuB,EAARtB,KADmC,mBAGpCE,EAHoC,eAK3C,OACE,6BACE,mCACA,2BAAIA,ICRK,SAASqB,EAAeD,GAAQ,IAAD,EAGbvB,EAFfuB,EAARtB,KADoC,mBAGtBM,GAHsB,gBAK5C,OACE,6BACE,oCACA,2BAAIA,ICRK,SAASkB,EAAiBF,GAAQ,IAAD,EAGfvB,EAFfuB,EAARtB,KADsC,mBAGjCI,GAHiC,gBAK9C,OACE,6BACE,mCACA,2BAAIA,GAAW,eCQNqB,MAbf,WACE,IAAMC,EAASC,qCAGf,OACE,oCACE,kBAAC,EAAD,CAAM3B,IAAG,UAAK0B,EAAL,UACT,kBAAC,EAAD,CAAO1B,IAAG,UAAK0B,EAAL,WACV,kBAAC,EAAD,CAAS1B,IAAG,UAAK0B,EAAL,eCVlBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f5d23c56.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\n\nexport default function useJsonFetch(url) {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          setError(response.statusText);\n          throw new Error(response.statusText);\n        }\n        const respData = await response.json();\n        setData(respData.status);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  },[url]);\n\n  return [data, loading, error];\n}\n","import React from 'react';\nimport useJsonFetch from '../useJsonFetch';\n\nexport default function DataComponent(props) {\n  const { url } = props;\n  // eslint-disable-next-line no-unused-vars\n  const [data, loading, error] = useJsonFetch(url);\n\n  return (\n    <div>\n      <p>Data</p>\n      <p>{data}</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport useJsonFetch from '../useJsonFetch';\n\nexport default function ErrorComponent(props) {\n  const { url } = props;\n  // eslint-disable-next-line no-unused-vars\n  const [data, loading, error] = useJsonFetch(url);\n\n  return (\n    <div>\n      <p>Error</p>\n      <p>{error}</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport useJsonFetch from '../useJsonFetch';\n\nexport default function LoadingComponent(props) {\n  const { url } = props;\n  // eslint-disable-next-line no-unused-vars\n  const [data, loading, error] = useJsonFetch(url);\n\n  return (\n    <div>\n      <p>Load</p>\n      <p>{loading && 'Loading...'}</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Data from './components/Data';\nimport Error from './components/Error';\nimport Loading from './components/Loading';\n\nfunction App() {\n  const urlEnv = process.env.REACT_APP_URL;\n  // const urlEnv = process.env.REACT_APP_LOCAL_URL;\n\n  return (\n    <>\n      <Data url={`${urlEnv}data`} />\n      <Error url={`${urlEnv}error`} />\n      <Loading url={`${urlEnv}loading`} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}